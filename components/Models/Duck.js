/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useState } from "react";
import { useGLTF } from "@react-three/drei";
import { usePlayersStore } from "@/hooks/usePlayersStore";
import { useSocketStore } from "@/hooks/useSocketStore";

const link = `${process.env.NEXT_PUBLIC_CDN}games/Race Game/duck.gltf`;

export default function Duck(props) {
    const { defaultColor = "white", hoverColor = "red", item } = props; // Default colors for hover and non-hover states
    const { nodes, materials } = useGLTF(link);

    const [isHovered, setIsHovered] = useState(false);

    // Centralized color logic
    let materialColor = isHovered ? hoverColor : defaultColor;

    if (item.dead) {
        materialColor = "green"
    }

    const {
        socket
    } = useSocketStore(state => ({
        socket: state.socket
    }));

    const {
        // players,
        // setPlayers,
        setPlayer,
        serverGameState,
        // populatePlayers
    } = usePlayersStore()

    return (
        <group {...props} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.character_duck.geometry}
                rotation={[Math.PI / 2, 0, 0]}
                onPointerOver={() => setIsHovered(true)}
                onPointerOut={() => setIsHovered(false)}
                onClick={() => {

                    socket.emit('game:death-race:shoot', {
                        player_index: item.player_index,
                        server_id: serverGameState.server_id
                    });

                    return

                    console.log("Was clicked!", item)
                    setPlayer(item.player_index, {
                        ...item,
                        dead: true
                        // x: item.x + defaultMovementSpaces
                    });

                }}
            >
                <meshBasicMaterial attach="material" color={materialColor} />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.character_duckArmLeft.geometry}
                    position={[0.204, 0, -0.634]}
                >
                    <meshBasicMaterial attach="material" color={materialColor} />
                </mesh>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.character_duckArmRight.geometry}
                    position={[-0.204, 0, -0.634]}
                >
                    <meshBasicMaterial attach="material" color={materialColor} />
                </mesh>
                <group position={[0, 0, -0.704]}>
                    <mesh castShadow receiveShadow geometry={nodes.Cube1338.geometry}>
                        <meshBasicMaterial attach="material" color={materialColor} />
                    </mesh>
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Cube1338_1.geometry}
                        material={materials["Yellow.043"]}
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Cube1338_2.geometry}
                        material={materials["Black.027"]}
                    />
                </group>
            </mesh>
        </group>
    );
}

useGLTF.preload(link);