/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 models\Cow.gltf --output output\Cow.js --transform --keepnames --shadows 
Files: models\Cow.gltf [3.11MB] > F:\My Documents\Articles Media\AMCOT\Models\Quaternius\Animals\JSX\output\Cow-transformed.glb [543.49KB] (83%)
*/

import React, { useEffect, useState } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

const link = `${process.env.NEXT_PUBLIC_CDN}games/Assets/Quaternius/Animals/Models/Cow.glb`

export default function Cow(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF(link)
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)

  const [randomYRotation] = useState(() => Math.random() * Math.PI * 2);

  useEffect(() => {
    
        console.log("Actions cow", actions)
  
        if (props.action) {
          actions[props.action].play();
        } else {
          actions['Eating'].play();
        }
    
    }, [actions]);

  return (
    <group ref={group} {...props} dispose={null} rotation={[0, randomYRotation, 0]}>
      <group name="Scene">
        <group name="AnimalArmature">
          <primitive object={nodes.Body} />
          <primitive object={nodes.IKBackLegL} />
          <primitive object={nodes.IKFrontLegL} />
          <primitive object={nodes.IKBackLegR} />
          <primitive object={nodes.IKFrontLegR} />
        </group>
        <group name="Cow">
          <skinnedMesh name="Cube" geometry={nodes.Cube.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube.skeleton} />
          <skinnedMesh name="Cube_1" geometry={nodes.Cube_1.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube_1.skeleton} />
          <skinnedMesh name="Cube_2" geometry={nodes.Cube_2.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube_2.skeleton} />
          <skinnedMesh name="Cube_3" geometry={nodes.Cube_3.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube_3.skeleton} />
          <skinnedMesh name="Cube_4" geometry={nodes.Cube_4.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube_4.skeleton} />
          <skinnedMesh name="Cube_5" geometry={nodes.Cube_5.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube_5.skeleton} />
          <skinnedMesh name="Cube_6" geometry={nodes.Cube_6.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube_6.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload(link)
